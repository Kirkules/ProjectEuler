"""
Created by Kirk Anthony Boyer
7/5/2012
Solution to Project Euler Problem 8
	Problem: Find the greatest product of five consecutive digits in the number:
			73167176531330624919225119674426574742355349194934
			96983520312774506326239578318016984801869478851843
			85861560789112949495459501737958331952853208805511
			12540698747158523863050715693290963295227443043557
			66896648950445244523161731856403098711121722383113
			62229893423380308135336276614282806444486645238749
			30358907296290491560440772390713810515859307960866
			70172427121883998797908792274921901699720888093776
			65727333001053367881220235421809751254540594752243
			52584907711670556013604839586446706324415722155397
			53697817977846174064955149290862569321978468622482
			83972241375657056057490261407972968652414535100474
			82166370484403199890008895243450658541227588666881
			16427171479924442928230863465674813919123162824586
			17866458359124566529476545682848912883142607690042
			24219022671055626321111109370544217506941658960408
			07198403850962455444362981230987879927244284909188
			84580156166097919133875499200524063689912560717606
			05886116467109405077541002256983155200055935729725
			71636269561882670428252483600823257530420752963450
	Idea: 	Iterate through 5-digit substrings, multiply by the entering digit and
			divide by the exiting digit. If the entering digit is 0, instead skip ahead
			to the next nonzero digit and start over with a new string of 5 digits.
"""
s = '73167176531330624919225119674426574742355349194934\
96983520312774506326239578318016984801869478851843\
85861560789112949495459501737958331952853208805511\
12540698747158523863050715693290963295227443043557\
66896648950445244523161731856403098711121722383113\
62229893423380308135336276614282806444486645238749\
30358907296290491560440772390713810515859307960866\
70172427121883998797908792274921901699720888093776\
65727333001053367881220235421809751254540594752243\
52584907711670556013604839586446706324415722155397\
53697817977846174064955149290862569321978468622482\
83972241375657056057490261407972968652414535100474\
82166370484403199890008895243450658541227588666881\
16427171479924442928230863465674813919123162824586\
17866458359124566529476545682848912883142607690042\
24219022671055626321111109370544217506941658960408\
07198403850962455444362981230987879927244284909188\
84580156166097919133875499200524063689912560717606\
05886116467109405077541002256983155200055935729725\
71636269561882670428252483600823257530420752963450'
s = tuple(s)
s = list(s)
for i in range(len(s)):
	s[i] = int(s[i])

def product(x):
	p = 1
	for i in x:
		p = p*i
	return p

max = s[0]*s[1]*s[2]*s[3]*s[4]
i = 5
numbers = s[0:5]
maxes = numbers
while i < len(s):
	numbers.pop(0)
	numbers.append(s[i])
	p = product(numbers)
	if p > max:
		max = p
		maxes = list(numbers)
	i+=1
	
print "max of", max, "with numbers", maxes